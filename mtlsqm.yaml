kind: ConfigMap
apiVersion: v1
metadata:
  name: mtlsmqsc
  namespace: <PROJECT>
data:
  example.mqsc: |-
    DEFINE QLOCAL('IN')
    DEFINE QLOCAL('OUT')
    DEFINE CHANNEL(ACE_SVRCONN) CHLTYPE(SVRCONN) TRPTYPE(TCP) SSLCAUTH(REQUIRED) SSLCIPH('ANY_TLS12_OR_HIGHER')
    ALTER AUTHINFO(SYSTEM.DEFAULT.AUTHINFO.IDPWOS) AUTHTYPE(IDPWOS) ADOPTCTX(YES) CHCKCLNT(OPTIONAL) CHCKLOCL(OPTIONAL) AUTHENMD(OS)
    SET CHLAUTH('ACE_SVRCONN') TYPE(SSLPEERMAP) SSLPEER('CN=application1,OU=app team1') USERSRC(MAP) MCAUSER('app1') ACTION(ADD)
    REFRESH SECURITY TYPE(CONNAUTH)
    SET AUTHREC PRINCIPAL('app1') OBJTYPE(QMGR) AUTHADD(CONNECT,INQ)
    SET AUTHREC PROFILE('IN') PRINCIPAL('app1') OBJTYPE(QUEUE) AUTHADD(BROWSE,GET,INQ,PUT,PASSALL)
    SET AUTHREC PROFILE('OUT') PRINCIPAL('app1') OBJTYPE(QUEUE) AUTHADD(BROWSE,GET,INQ,PUT,PASSALL)
  example.ini: |-
    Service:
      Name=AuthorizationService
      EntryPoints=14
      SecurityPolicy=UserExternal
---
apiVersion: mq.ibm.com/v1beta1
kind: QueueManager
metadata:
  name: mtlsqm
  namespace: <PROJECT>
spec:
  version: 9.2.2.0-r1
  license:
    accept: true
    license: L-RJON-BXUPZ2
    use: "Production"
  pki:
    keys:
    - name: default
      secret:
        secretName: qmcerts
        items:
          - tls.key
          - tls.crt
    trust:
    - name: app
      secret:
        secretName: mqtrustcerts
        items:
          - application.crt
  web:
    enabled: true
  queueManager:
    ini:
      - configMap:
          name: mtlsmqsc
          items:
            - example.ini
    mqsc:
      - configMap:
          name: mtlsmqsc
          items:
            - example.mqsc
